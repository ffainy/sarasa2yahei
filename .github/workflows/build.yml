name: build sarasa2yahei
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # - name: Set up Python
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: '3.10'
      # - run: python3 --version && python3 -m pip --version

      - name: Install Dependencies
        run: |
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository ppa:fontforge/fontforge
          sudo apt-get install -y python3 fontforge python3-fontforge





      - name: Get Upstream Version
        run: |
          UPSTREAM_VERSION=$(curl -s https://api.github.com/repos/be5invis/Sarasa-Gothic/releases/latest | jq -r '.tag_name')
          echo "UPSTREAM_VERSION=${UPSTREAM_VERSION}" >> $GITHUB_ENV
          echo ${UPSTREAM_VERSION}

      - name: Find Download URL
        run: |
          DOWNLOAD_URL=$(curl -s https://api.github.com/repos/be5invis/Sarasa-Gothic/releases/latest | jq -r '.assets[] | select(.name | contains("ttf-unhinted")) | .browser_download_url')
          echo "DOWNLOAD_URL=${DOWNLOAD_URL}" >> $GITHUB_ENV
          echo ${DOWNLOAD_URL}

      - name: Download and Extract Fonts
        run: |
          mkdir /tmp/out
          cd /tmp
          curl -Lvo fonts.7z $DOWNLOAD_URL
          sha1sum fonts.7z
          ls -a
          7z e fonts.7z sarasa-ui-cl-regular.ttf sarasa-ui-cl-light.ttf sarasa-ui-cl-bold.ttf
          ls -a

      - name: Run script
        run: |
          python3 gen_yahei.py

      - name: Create archive
        run: |
          cd /tmp/out
          ls -a
          7z a sarasa2yahei.7z *.ttc *.ttf

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.UPSTREAM_VERSION }}
          release_name: Release ${{ env.UPSTREAM_VERSION }}
          draft: false
          prerelease: false

      - name: Upload Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /tmp/out/sarasa2yahei.7z
          asset_name: sarasa2yahei-${{ env.UPSTREAM_VERSION }}.7z
          asset_content_type: application/x-7z-compressed
