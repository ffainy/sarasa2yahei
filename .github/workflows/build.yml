name: build sarasa2yahei
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get install -y fontforge python3-fontforge p7zip-full

      - name: Get Upstream Version
        run: |
          UPSTREAM_VERSION=$(curl -s https://api.github.com/repos/be5invis/Sarasa-Gothic/releases/latest | jq -r '.tag_name')
          echo "UPSTREAM_VERSION=${UPSTREAM_VERSION}" >> $GITHUB_ENV
          echo ${UPSTREAM_VERSION}

      - name: Get Download URL
        run: |
          DOWNLOAD_URL=$(curl -s https://api.github.com/repos/be5invis/Sarasa-Gothic/releases/latest | jq -r '.assets[] | select(.name | contains("ttf-unhinted")) | .browser_download_url')
          echo "DOWNLOAD_URL=${DOWNLOAD_URL}" >> $GITHUB_ENV
          echo ${DOWNLOAD_URL}

      - name: Download and Extract Fonts
        run: |
          mkdir /tmp/out
          cd /tmp
          curl -Lvo fonts.7z $DOWNLOAD_URL
          7z e fonts.7z sarasa-ui-cl-regular.ttf sarasa-ui-cl-light.ttf sarasa-ui-cl-bold.ttf

      - name: Run script
        run: |
          python3 gen_yahei.py
          python3 gen_simsun.py

      - name: Create archive
        run: |
          cd /tmp/out
          ls -a
          7z a yahei.7z msyh*
          7z a simsun.7z simsun*
          7z a all.7z *.ttc *.ttf
          ls -a

      - name: Release
      - uses: "marvinpinto/action-automatic-releases@latest"
          with:
            repo_token: "${{ secrets.GITHUB_TOKEN }}"
            automatic_release_tag: ${{ env.UPSTREAM_VERSION }}
            prerelease: false
            title: ${{ env.UPSTREAM_VERSION }}
            files: |
              *.7z

      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ env.UPSTREAM_VERSION }}
      #     release_name: Release ${{ env.UPSTREAM_VERSION }}
      #     draft: false
      #     prerelease: false

      # - name: Upload Asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: |
      #       /tmp/out/yahei.7z
      #       /tmp/out/simsun.7z
      #       /tmp/out/all.7z
      #     asset_name: sarasa2yahei-${{ env.UPSTREAM_VERSION }}.7z
      #     asset_content_type: application/x-7z-compressed
